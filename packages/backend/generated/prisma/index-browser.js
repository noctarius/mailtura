
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TenantsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.RelationLoadStrategy = {
  query: 'query',
  join: 'join'
};

exports.Prisma.ContactsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  email: 'email',
  first_name: 'first_name',
  last_name: 'last_name',
  last_activity_at: 'last_activity_at',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.CampaignsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  name: 'name',
  status: 'status',
  type: 'type',
  recipients: 'recipients',
  sent: 'sent',
  delivered: 'delivered',
  scheduled_for: 'scheduled_for',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.ActivitiesScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  send_name: 'send_name',
  subject: 'subject',
  status: 'status',
  sent_at: 'sent_at',
  last_event_received_at: 'last_event_received_at',
  last_event_type: 'last_event_type',
  opens: 'opens',
  clicks: 'clicks',
  campaign_id: 'campaign_id',
  contact_id: 'contact_id',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.BouncesScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  bounced_at: 'bounced_at',
  reason: 'reason',
  bounce_type: 'bounce_type',
  contact_id: 'contact_id',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.SubscribersScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  status: 'status',
  subscribed_at: 'subscribed_at',
  subscriber_list_id: 'subscriber_list_id',
  contact_id: 'contact_id',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.Subscriber_listsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.UnsubscribesScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  source: 'source',
  unsubscribed_at: 'unsubscribed_at',
  global: 'global',
  list_ids: 'list_ids',
  contact_id: 'contact_id',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  email: 'email',
  first_name: 'first_name',
  last_name: 'last_name',
  role: 'role',
  is_active: 'is_active',
  last_login_at: 'last_login_at',
  permissions: 'permissions',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.Api_keysScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  name: 'name',
  key: 'key',
  is_active: 'is_active',
  last_used_at: 'last_used_at',
  expires_at: 'expires_at',
  permissions: 'permissions',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.Template_propertiesScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  templates_id: 'templates_id',
  name: 'name',
  type: 'type',
  default_value: 'default_value'
};

exports.Prisma.TemplatesScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  name: 'name',
  description: 'description',
  content: 'content',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.campaign_status = exports.$Enums.campaign_status = {
  Active: 'Active',
  Scheduled: 'Scheduled',
  Completed: 'Completed',
  Draft: 'Draft',
  Paused: 'Paused',
  Cancelled: 'Cancelled'
};

exports.campaign_type = exports.$Enums.campaign_type = {
  OneTime: 'OneTime',
  Automated: 'Automated'
};

exports.activity_status = exports.$Enums.activity_status = {
  Delivered: 'Delivered',
  Opened: 'Opened',
  Clicked: 'Clicked',
  Pending: 'Pending',
  Scheduled: 'Scheduled',
  Bounced: 'Bounced',
  Failed: 'Failed'
};

exports.event_type = exports.$Enums.event_type = {
  Queued: 'Queued',
  Delivered: 'Delivered',
  Clicked: 'Clicked',
  Opened: 'Opened',
  Failed: 'Failed',
  Bounced: 'Bounced'
};

exports.bounce_type = exports.$Enums.bounce_type = {
  Hard: 'Hard',
  Soft: 'Soft'
};

exports.subscriber_status = exports.$Enums.subscriber_status = {
  Subscribed: 'Subscribed',
  Unsubscribed: 'Unsubscribed',
  Bounced: 'Bounced',
  Complaint: 'Complaint'
};

exports.unsubscribe_source = exports.$Enums.unsubscribe_source = {
  UnsubscribeLink: 'UnsubscribeLink',
  ManualAddition: 'ManualAddition',
  Bounce: 'Bounce',
  Api: 'Api',
  Other: 'Other'
};

exports.Prisma.ModelName = {
  tenants: 'tenants',
  contacts: 'contacts',
  campaigns: 'campaigns',
  activities: 'activities',
  bounces: 'bounces',
  subscribers: 'subscribers',
  subscriber_lists: 'subscriber_lists',
  unsubscribes: 'unsubscribes',
  users: 'users',
  api_keys: 'api_keys',
  template_properties: 'template_properties',
  templates: 'templates'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
